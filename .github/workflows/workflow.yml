# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on pull request event but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v3

      - name: Bash
        run: firstline=$(sed '1q;d' README.md);
          secondline=$(sed '2q;d' README.md);
          firstLineChar=${firstline:0:1};
          secondLineChar=${secondline:0:1};
          echo $firstLineChar;
          echo $secondLineChar;
          if [ "$firstLineChar" == "#" ]; then echo '::set-output name=titleResult::"title exists"' ; else echo '::set-output name=titleResult::"title does not exist"' ; fi;
          if [ -n "$secondLineChar" ]; then echo '::set-output name=desResult::"description exists"'; else echo '::set-output name=desResult::"no description"'; fi;
          arr=();
          while IFS= read -r line; do arr+=(${#line}) ; done < README.md;
          echo ${arr[0]};
          if [[ "${arr[0]}" -le 70 && "${arr[0]}" -ge 50 ]]; then echo '::set-output name=titleLen::"title len good"'; else echo '::set-output name=titleLen::"title len bad"'; fi;
          unset arr[0];
          total=0;
          for i in ${arr[@]}; do
          let total+=$i;
          done;
          if [[ ${total} -le 170 && ${total} -ge 140 ]]; then echo '::set-output name=desLen::"description good"'; else echo '::set-output name=desLen::"description len bad"'; fi;
        id: script

      - name: Test
        run: echo  ${{ steps.script.outputs.titleLen }}
      # Runs a single command using the runners shell
      - name: Check if for heading length
        run: | 
        if ${{ steps.script.outputs.titleResult == 'title exists' && steps.script.outputs.titleLen == 'title len bad' }}; then exit 1; else echo "Title is good"; fi;

      - name: Check if for description length
        run: |
        if ${{ steps.script.outputs.desResult == 'description exists' && steps.script.outputs.desLen == 'description len bad' }}; then exit 1; else echo "Des is good"; fi;

      # #Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
