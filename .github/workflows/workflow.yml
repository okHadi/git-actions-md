# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  pull_request:
    branches: ["main"]

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  conditional_step:
    runs-on: "ubuntu-20.04"
    steps:
      - name: Checkout
      - uses: actions/checkout@v2
      - name: Check if .md file was updated in this Pull Request
        run: echo "GITHUB_MD_FILE_CHANGED=$(gh pr view 9 --json files --jq '.files.[].path' | grep -i '.md')" >> $GITHUB_ENV
      - name: test
        run: echo $GITHUB_MD_FILE_CHANGED
      - name : Check
        run: |
          firstline=$(sed '1q;d' README.md);
          secondline=$(sed '2q;d' README.md);
          firstLineLetter=${firstline%% *};
          secondLineLetter=${secondline%% *}; 
          if [ "$firstLineLetter" == "title:" ]; then echo '::set-output name=titleResult::True' ; else echo '::set-output name=titleResult::False' ; fi;
          if [ "$secondLineLetter" == "description:" ]; then echo '::set-output name=desResult::True'; else echo '::set-output name=desResult::False'; fi;
          arr=();
          while IFS= read -r line; do arr+=(${#line}) ; done < README.md;
          echo ${arr[0]};
          if [[ $((${arr[0]} - 6)) -le 70 && $((${arr[0]} - 6)) -ge 50 ]]; then echo '::set-output name=titleLenGood::True'; else echo '::set-output name=titleLenGood::False'; fi;

          if [[ $((${arr[1]} - 12)) -le 170 && $((${arr[1]} - 12)) -ge 140 ]]; then echo '::set-output name=descLenGood::True'; else echo '::set-output name=desLenGood::False'; fi;
        id: script

      - name: Check for heading length
        run: |
          if [[ ${{ steps.script.outputs.titleResult }} == True && ${{ steps.script.outputs.titleLenGood }} == False ]] ;
          then exit 1; fi ;

      - name: Check for description length
        run: |
          if [ ${{ steps.script.outputs.desResult }} == True && ${{ steps.script.outputs.descLenGood }} == False ];
          then exit 1; fi ;
